#
spring:
  cloud:
    gateway:
      enabled: true
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      default-filters:
        #（★）HystrxGatewayFilterFactroy
        - name: Hystrix
          args:
            name: default
            fallbackUri: forward:/defaultFallback
      routes:
        - id: study-springcloud-provider
          uri: lb://study-springcloud-provider
          predicates:
            - Path=/springcloud-provider/**
          filters:
            - StripPrefix=1
#
hystrix:
  #
  threadpool:
    default:
      #核心线程数
      coreSize: 10
      #最大排队长度。默认-1，使用SynchronousQueue。
      #其他值则使用 LinkedBlockingQueue。
      #如果要从-1换成其他值则需重启，即该值不能动态调整，若要动态调整，需要使用到下边这个配置
      maxQueueSize: -1
      #
      queueSizeRejectionThreshold: 1000
  #
  command:
    default:
      #（★）HystrixCommand如何执行
      execution:
        #（▲）HystrixCommand.run()的执行是否启用超时时间
        timeout:
          enabled: false
        #（▲）隔离
        isolation:
          #HystrixCommand.run()执行的隔离策略，THREAD/SEMAPHORE
          strategy: SEMAPHORE
          #（▲）线程
          thread:
            #HystrixCommand执行的超时时间
            timeoutInMilliseconds: 3000
            #当HystrixCommand.run()执行超时的时候是否要它中断
            interruptOnTimeout: true
            #当HystrixCommand.run()执行取消时是否要它中断
            interruptOnCancel: true
          #（▲）信号量
          semaphore:
            #信号量的大小，当最大并发请求达到该设置值时，后续的请求将被拒绝
            maxConcurrentRequests: 100
      #（★）回退降级
      fallback:
        enabled: true
      #（★）断路器
      circuitBreaker:
        #是否开启熔断器，默认为true
        enabled: true
        #断路器将强制进入“打开”状态，它会拒绝所有请求
        forceOpen: true
        #
        forceClosed: true
        #当在配置时间窗口内达到此数量的失败后，进行短路。默认20个
        requestVolumeThreshold: 20
        #窗口时间内，请求失败打开熔断器的百分比，默认是50，也就是超过50%的失败了才会打开
        #出错百分比阈值，当达到此阈值后，开始短路。默认50%
        errorThresholdPercentage: 10
        #熔断多久以后开始尝试是否恢复，默认5s
        sleepWindowInMilliseconds: 5000
